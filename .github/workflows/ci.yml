name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: "3.11"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: |
          uv sync --dev
          # Ensure all dev dependencies are available
          uv pip install -r requirements/dev.txt
      
      - name: Run security checks
        run: |
          uv run bandit -r . -f json -o bandit-report.json || true
          uv run safety check --json --output safety-report.json || true
          uv run semgrep --config=auto --json --output=semgrep-report.json . || true
      
      - name: Run linting
        run: |
          uv run ruff check .
          uv run ruff format --check .
          uv run mypy services agents tools
      
      - name: Run tests
        run: |
          uv run pytest --cov=services --cov=agents --cov=tools --cov-report=xml --cov-report=html
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker images
        run: |
          docker build -t dshield/coordination-api:${{ github.sha }} -f docker/Dockerfile.api .
          docker build -t dshield/coordination-workflow:${{ github.sha }} -f docker/Dockerfile.workflow .
          docker build -t dshield/coordination-worker:${{ github.sha }} -f docker/Dockerfile.worker .
      
      - name: Run container security scan
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy image dshield/coordination-api:${{ github.sha }}
      
      - name: Push Docker images
        if: github.ref == 'refs/heads/main'
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push dshield/coordination-api:${{ github.sha }}
          docker push dshield/coordination-workflow:${{ github.sha }}
          docker push dshield/coordination-worker:${{ github.sha }}

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [test, security, build]
    if: github.ref == 'refs/heads/main'
    environment: staging
    
    steps:
      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment"
          # Add deployment logic here 